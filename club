from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///club_management.db'
db = SQLAlchemy(app)

# Database Models
class Club(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    description = db.Column(db.String(255), nullable=False)

class Member(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    email = db.Column(db.String(100), unique=True, nullable=False)
    club_id = db.Column(db.Integer, db.ForeignKey('club.id'), nullable=False)

class Event(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    date = db.Column(db.String(50), nullable=False)
    club_id = db.Column(db.Integer, db.ForeignKey('club.id'), nullable=False)

# Routes
@app.route('/')
def home():
    clubs = Club.query.all()
    return render_template('index.html', clubs=clubs)

@app.route('/add_club', methods=['POST'])
def add_club():
    name = request.form['name']
    description = request.form['description']
    new_club = Club(name=name, description=description)
    db.session.add(new_club)
    db.session.commit()
    return redirect(url_for('home'))

@app.route('/add_member', methods=['POST'])
def add_member():
    name = request.form['name']
    email = request.form['email']
    club_id = request.form['club_id']
    new_member = Member(name=name, email=email, club_id=club_id)
    db.session.add(new_member)
    db.session.commit()
    return redirect(url_for('home'))

@app.route('/add_event', methods=['POST'])
def add_event():
    name = request.form['name']
    date = request.form['date']
    club_id = request.form['club_id']
    new_event = Event(name=name, date=date, club_id=club_id)
    db.session.add(new_event)
    db.session.commit()
    return redirect(url_for('home'))

if __name__ == '__main__':
    with app.app_context():
        db.create_all()
    app.run(debug=True)
